-- A simple model for an HTTP based API
package com.theoryinpractise.gadt.examples;

-- java.lang is "imported" by default, but if you want to use other classes,
-- simply import them

import java.util.Date;
import com.theoryinpractise.gadt.Shouter;

data Customer = SimpleCustomer(firstName: String, lastName: String);

data Request implements (Shouter)
  = GET    (path : String)
  | DELETE (path : String)
  | POST   (path : String, body : String);

-- By not specifying any arguments for a data type, it is generated as a
-- singleton instance which could be used in place of standard enums.
data Day
  = Monday | Tuesday | Wednesday
  | Thursday | Friday | Saturday | Sunday;

data Log
  = info(date: Date, message: String)
  | debug(date: Date, message: String)
  | warn(date: Date, message: String)
  | error(date: Date, message: String);

data GenericType<T>
  = Empty
  | Single(value: T)
  | Container(value: java.util.Set<T>);
